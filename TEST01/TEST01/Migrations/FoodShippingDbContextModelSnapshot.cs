// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TEST01.Context;

#nullable disable

namespace TEST01.Migrations
{
    [DbContext(typeof(FoodShippingDbContext))]
    partial class FoodShippingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TEST01.Models.Account", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserName");

                    b.HasIndex("MaKH")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("TEST01.Models.CTHD", b =>
                {
                    b.Property<string>("MaHD")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaMA")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MAK")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SL")
                        .HasColumnType("int");

                    b.HasKey("MaHD", "MaMA");

                    b.HasIndex("MaMA");

                    b.ToTable("CTHDs");
                });

            modelBuilder.Entity("TEST01.Models.HoaDon", b =>
                {
                    b.Property<string>("MaHD")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayHD")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("THT")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaHD");

                    b.HasIndex("MaKH");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("TEST01.Models.KhachHang", b =>
                {
                    b.Property<string>("MaKH")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKH");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("TEST01.Models.MonAn", b =>
                {
                    b.Property<string>("MaMA")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LoaiMA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaMA");

                    b.ToTable("MonAns");
                });

            modelBuilder.Entity("TEST01.Models.Account", b =>
                {
                    b.HasOne("TEST01.Models.KhachHang", "KhachHang")
                        .WithOne("Account")
                        .HasForeignKey("TEST01.Models.Account", "MaKH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("TEST01.Models.CTHD", b =>
                {
                    b.HasOne("TEST01.Models.HoaDon", "HoaDon")
                        .WithMany("CTHDs")
                        .HasForeignKey("MaHD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TEST01.Models.MonAn", "MonAn")
                        .WithMany("CTHDs")
                        .HasForeignKey("MaMA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("MonAn");
                });

            modelBuilder.Entity("TEST01.Models.HoaDon", b =>
                {
                    b.HasOne("TEST01.Models.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("TEST01.Models.HoaDon", b =>
                {
                    b.Navigation("CTHDs");
                });

            modelBuilder.Entity("TEST01.Models.KhachHang", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("TEST01.Models.MonAn", b =>
                {
                    b.Navigation("CTHDs");
                });
#pragma warning restore 612, 618
        }
    }
}
